[{"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\index.js":"1","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\reportWebVitals.js":"2","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\App.js":"3","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\ducks\\store.js":"4","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Routes.js":"5","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\ducks\\Reducers\\userReducer.js":"6","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\Header\\Header.js":"7","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\ducks\\Reducers\\commentReducer.js":"8","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\MarketGallery\\MarketGallery.js":"9","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\Home\\Home.js":"10","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\ClassifiedPage\\ClassifiedPage.js":"11","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\BikeGallery\\BikeGallery.js":"12","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\BikePage\\BikePage.js":"13","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\Login\\Login.js":"14","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\Header\\CommentItem\\CommentItem.js":"15","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\Home\\ShowcaseBike\\ShowcaseBike.js":"16","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\MarketListItem\\MarketListItem.js":"17","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\Home\\MarketGalleryItem\\MarketGalleryItem.js":"18","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\Home\\BikeGalleryItem\\BikeGalleryItem.js":"19","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\BikeListItem\\BikeListItem.js":"20"},{"size":828,"mtime":1621971068565,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1621971068566,"results":"23","hashOfConfig":"22"},{"size":251,"mtime":1621971068550,"results":"24","hashOfConfig":"22"},{"size":316,"mtime":1621971068564,"results":"25","hashOfConfig":"22"},{"size":853,"mtime":1621971068563,"results":"26","hashOfConfig":"22"},{"size":440,"mtime":1621971068564,"results":"27","hashOfConfig":"22"},{"size":3118,"mtime":1634952344944,"results":"28","hashOfConfig":"22"},{"size":522,"mtime":1621971068564,"results":"29","hashOfConfig":"22"},{"size":9647,"mtime":1621971068562,"results":"30","hashOfConfig":"22"},{"size":1114,"mtime":1634954955227,"results":"31","hashOfConfig":"22"},{"size":8844,"mtime":1621971068557,"results":"32","hashOfConfig":"22"},{"size":15843,"mtime":1630499375628,"results":"33","hashOfConfig":"22"},{"size":11950,"mtime":1621971068556,"results":"34","hashOfConfig":"22"},{"size":12164,"mtime":1621971068562,"results":"35","hashOfConfig":"22"},{"size":2386,"mtime":1621971068558,"results":"36","hashOfConfig":"22"},{"size":2485,"mtime":1621971068561,"results":"37","hashOfConfig":"22"},{"size":2335,"mtime":1621971068563,"results":"38","hashOfConfig":"22"},{"size":1417,"mtime":1621971068560,"results":"39","hashOfConfig":"22"},{"size":1167,"mtime":1634955028335,"results":"40","hashOfConfig":"22"},{"size":2298,"mtime":1621971068555,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"6q6x28",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\index.js",[],["85","86"],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\reportWebVitals.js",[],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\App.js",[],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\ducks\\store.js",[],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Routes.js",[],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\ducks\\Reducers\\userReducer.js",[],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\Header\\Header.js",[],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\ducks\\Reducers\\commentReducer.js",[],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\MarketGallery\\MarketGallery.js",[],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\Home\\Home.js",["87","88"],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\ClassifiedPage\\ClassifiedPage.js",[],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\BikeGallery\\BikeGallery.js",["89","90"],"import { useEffect, useState, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport BikeListItem from '../BikeListItem/BikeListItem';\r\nimport './BikeGallery.css'\r\n\r\nconst BikeGallery = props => {\r\n    const { user } = props\r\n    const { page } = useParams()\r\n    const [bikeList, setBikeList] = useState([])\r\n    const [lastBikeId, setLastBikeId] = useState([]);\r\n    const [cancelTokenSource] = useState(axios.CancelToken.source())\r\n    const [uploadView, setUploadView] = useState(false)\r\n    const [newBikeInputView, setNewBikeInputView] = useState(false)\r\n    const [multiFilesInput, setMultiFilesInput] = useState([])\r\n    const [itemsPerPage, setItemsPerPage] = useState(3)\r\n    const [totalItems, setTotalItems] = useState(0)\r\n    const [prevButtonArr, setPrevButtonArr] = useState([])\r\n    const [nextButtonArr, setNextButtonArr] = useState([])\r\n    const [bikeInput, setBikeInput] = useState({\r\n        title: '',\r\n        manufacturer: '',\r\n        frame: '',\r\n        fork: '',\r\n        wheelset: '',\r\n        tires: '',\r\n        headset: '',\r\n        stem: '',\r\n        handlebars: '',\r\n        saddle: '',\r\n        seatpost: '',\r\n        crankset: '',\r\n        cog: '',\r\n        chain: '',\r\n        pedals: ''\r\n    })\r\n\r\n    // const getBikeList = useCallback(() => {\r\n    //     axios.get('/api/bikes')\r\n    //         .then(res => setBikeList(res.data), { cancelToken: cancelTokenSource.token })\r\n    //         .catch(err => console.log(err))\r\n    // }, [cancelTokenSource.token])\r\n\r\n    const initPaginationButtons = useCallback(() => {\r\n        // let tempPrevButtonArr = []\r\n        let tempNextButtonArr = []\r\n        let count = 0\r\n        // for (let i = +page - 1; i > 0 && count < 3; i--) {\r\n        //     count++\r\n        //     tempPrevButtonArr.unshift(\r\n        //         <Link to={`/builds/page/${i}`} key={i}>\r\n        //             <div className='paginate-btn-box'>\r\n        //                 <h6>{i}</h6>\r\n        //             </div>\r\n        //         </Link>\r\n        //     )\r\n        // }\r\n        //NEED TO TEST THIS!!  VVVVVVVVVVVVVVVVV\r\n        //NEED TO TEST THIS!!  VVVVVVVVVVVVVVVVV\r\n        //NEED TO TEST THIS!!  VVVVVVVVVVVVVVVVV\r\n        //NEED TO TEST THIS!!  VVVVVVVVVVVVVVVVV\r\n        //NEED TO TEST THIS!!  VVVVVVVVVVVVVVVVV\r\n        //NEED TO TEST THIS!!  VVVVVVVVVVVVVVVVV\r\n        //NEED TO TEST THIS!!  VVVVVVVVVVVVVVVVV\r\n        //NEED TO TEST THIS!!  VVVVVVVVVVVVVVVVV\r\n        //NEED TO TEST THIS!!  VVVVVVVVVVVVVVVVV\r\n        //NEED TO TEST THIS!!  VVVVVVVVVVVVVVVVV\r\n        const tempPrevButtonArr = [...(new Array(+page > 3 ? 3 : +page - 1))].map((e, i) => {\r\n            const pageNum = +page - (i + 1)\r\n            return (\r\n                <Link to={`/builds/page/${pageNum}`} key={pageNum}>\r\n                    <div className='paginate-btn-box'>\r\n                        <h6>{pageNum}</h6>\r\n                    </div>\r\n                </Link>\r\n            )\r\n        })\r\n        count = 0;\r\n        for (let i = +page + 1; i <= Math.ceil(totalItems / itemsPerPage) && count < 3; i++) {\r\n            count++\r\n            tempNextButtonArr.push(\r\n                <Link to={`/builds/page/${i}`} key={i}>\r\n                    <div className='paginate-btn-box'>\r\n                        <h6>{i}</h6>\r\n                    </div>\r\n                </Link>\r\n            )\r\n        }\r\n        setPrevButtonArr(tempPrevButtonArr)\r\n        setNextButtonArr(tempNextButtonArr)\r\n        // console.log({ totalItems })\r\n        // console.log(Math.ceil(totalItems / itemsPerPage))\r\n        // console.log({ page: +page + 1 })\r\n        // console.log(tempNextButtonArr)\r\n    }, [totalItems, itemsPerPage, page])\r\n\r\n    const getBikeList = useCallback(() => {\r\n        axios.post('/api/paginated-bikes', { page, itemsPerPage, cancelToken: cancelTokenSource.token })\r\n            .then(res => {\r\n                setBikeList(res.data)\r\n                if (res.data[0]) {\r\n                    setTotalItems(+res.data[0].full_count)\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [cancelTokenSource.token, page, itemsPerPage])\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setBikeInput(old => ({ ...old, [e.target.name]: e.target.value }))\r\n    }\r\n\r\n    const handleBikeSubmit = (e) => {\r\n        axios.post('/api/bikes', bikeInput)\r\n            .then(res => {\r\n                setLastBikeId(res.data.bike_id)\r\n                getBikeList()\r\n            })\r\n            .catch(err => console.log(err))\r\n        setUploadView(true)\r\n    }\r\n\r\n    const multipleFileUploadHandler = (e) => {\r\n        e.preventDefault();\r\n        const data = new FormData();\r\n        let selectedFiles = multiFilesInput;\r\n        // If file selected\r\n        if (selectedFiles) {\r\n            for (let i = 0; i < selectedFiles.length; i++) {\r\n                data.append('galleryImage', selectedFiles[i], selectedFiles[i].name);\r\n            }\r\n            axios.post('/api/profile/multiple-file-upload', data, {\r\n                headers: {\r\n                    'accept': 'application/json',\r\n                    'Accept-Language': 'en-US,en;q=0.8',\r\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                }\r\n            })\r\n                .then((response) => {\r\n                    console.log('res', response);\r\n                    if (200 === response.status) {\r\n                        // If file size is larger than expected.\r\n                        if (response.data.error) {\r\n                            if ('LIMIT_FILE_SIZE' === response.data.error.code) {\r\n                                alert('Max size: 2MB', 'red');\r\n                            } else if ('LIMIT_UNEXPECTED_FILE' === response.data.error.code) {\r\n                                alert('Max 4 images allowed', 'red');\r\n                            } else {\r\n                                // If not the given ile type\r\n                                alert(response.data.error, 'red');\r\n                            }\r\n                        } else {\r\n                            // Success\r\n                            console.log('hEEEEEEEEEY', response.data)\r\n                            let arr = response.data.locationArray;\r\n                            arr.forEach(e => {\r\n                                axios.post('/api/bikes/images', { bike_id: lastBikeId, url: e })\r\n                                    .then(res => console.log(res.data))\r\n                                    .catch(err => console.log(err))\r\n                            })\r\n                            console.log(arr);\r\n                            alert('File Uploaded', '#3089cf');\r\n                        }\r\n                    }\r\n                }).catch((error) => {\r\n                    // If another error\r\n                    alert(error, 'red');\r\n                });\r\n        } else {\r\n            // if file not selected throw error\r\n            alert('Please upload file', 'red');\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        cancelTokenSource.cancel();\r\n        getBikeList()\r\n        return () => {\r\n            cancelTokenSource.cancel();\r\n        }\r\n\r\n    }, [getBikeList, cancelTokenSource, page, itemsPerPage])\r\n\r\n    useEffect(() => {\r\n        if (totalItems > 0) {\r\n            initPaginationButtons()\r\n        }\r\n    }, [totalItems, page, initPaginationButtons])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(multiFilesInput)\r\n    }, [multiFilesInput])\r\n\r\n    return (\r\n        <>\r\n            <main id='main-builds'>\r\n                <section className='large-gallery'>\r\n                    <div className='title-container'>\r\n                        <h2>BUILDS</h2>\r\n                        {bikeList[0] && (\r\n                            <span>displaying {(+page - 1) * itemsPerPage + 1} - {+page * itemsPerPage >= totalItems ? totalItems : (+page - 1) * itemsPerPage + bikeList.length} out of {totalItems} Bikes</span>\r\n                        )}\r\n                    </div>\r\n                    <div className='gallery-list'>\r\n                        {bikeList.map(bike => {\r\n                            return (\r\n                                <BikeListItem key={bike.bike_id} bike={bike} getBikeListFn={getBikeList} cancelTokenSource={cancelTokenSource} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    {bikeList[0] && (\r\n                        <nav className=\"paginate-nav\">\r\n                            <div className=\"paginate-btn-container paginate-previous-container\">\r\n                                {+page > 1 &&\r\n                                    <>\r\n                                        <h5>&lt;</h5>\r\n                                        {prevButtonArr}\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            <div className=\"paginate-current-container\">\r\n                                <h4>{+page}</h4>\r\n                            </div>\r\n                            <div className=\"paginate-btn-container paginate-next-container\">\r\n                                {+page <= (Math.floor(totalItems / itemsPerPage)) && (\r\n                                    <>\r\n                                        {nextButtonArr}\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n\r\n                        </nav>\r\n                    )}\r\n\r\n                </section>\r\n            </main>\r\n            <div id='close-input-click-container' className={newBikeInputView ? '' : 'hide-bike-input'} onClick={(e) => {\r\n                e.target.id === 'close-input-click-container' && setNewBikeInputView(!newBikeInputView)\r\n            }}>\r\n                <aside id='bike-input-container' className={newBikeInputView ? '' : 'hide-bike-input'}>\r\n                    {user ? (\r\n                        <>\r\n                            <div id='bike-input-toggle-button' onClick={() => setNewBikeInputView(!newBikeInputView)}>\r\n                                <div id='pulse-container' className='button-pulse'>\r\n                                    <p id='pulse-text'>ADD BIKE</p>\r\n                                    {newBikeInputView ? (\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M6 12.796V3.204L11.481 8 6 12.796zm.659.753l5.48-4.796a1 1 0 0 0 0-1.506L6.66 2.451C6.011 1.885 5 2.345 5 3.204v9.592a1 1 0 0 0 1.659.753z\" />\r\n                                        </svg>\r\n                                    ) : (\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M10 12.796V3.204L4.519 8 10 12.796zm-.659.753l-5.48-4.796a1 1 0 0 1 0-1.506l5.48-4.796A1 1 0 0 1 11 3.204v9.592a1 1 0 0 1-1.659.753z\" />\r\n                                        </svg>\r\n                                    )\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                            <form id='bike-form' onClick={() => setNewBikeInputView(true)}>\r\n                                {!uploadView ? (\r\n                                    <>\r\n                                        <h3>UPLOAD YOUR BUILD!</h3>\r\n                                        <label>BIKE NAME:</label>\r\n                                        <input name='title' value={bikeInput.title} onChange={handleChange} />\r\n                                        <label>MANUFACTURER:</label>\r\n                                        <input name='manufacturer' value={bikeInput.manufacturer} onChange={handleChange} />\r\n                                        <label>FRAME:</label>\r\n                                        <input name='frame' value={bikeInput.frame} onChange={handleChange} />\r\n                                        <label>FORK:</label>\r\n                                        <input name='fork' value={bikeInput.fork} onChange={handleChange} />\r\n                                        <label>HEADSET:</label>\r\n                                        <input name='headset' value={bikeInput.headset} onChange={handleChange} />\r\n                                        <label>WHEELSET:</label>\r\n                                        <input name='wheelset' value={bikeInput.wheelset} onChange={handleChange} />\r\n                                        <label>TIRES:</label>\r\n                                        <input name='tires' value={bikeInput.tires} onChange={handleChange} />\r\n                                        <label>STEM:</label>\r\n                                        <input name='stem' value={bikeInput.stem} onChange={handleChange} />\r\n                                        <label>HANDLEBARS:</label>\r\n                                        <input name='handlebars' value={bikeInput.handlebars} onChange={handleChange} />\r\n                                        <label>SADDLE:</label>\r\n                                        <input name='saddle' value={bikeInput.saddle} onChange={handleChange} />\r\n                                        <label>SEATPOST:</label>\r\n                                        <input name='seatpost' value={bikeInput.seatpost} onChange={handleChange} />\r\n                                        <label>CRANKSET:</label>\r\n                                        <input name='crankset' value={bikeInput.crankset} onChange={handleChange} />\r\n                                        <label>PEDALS:</label>\r\n                                        <input name='pedals' value={bikeInput.pedals} onChange={handleChange} />\r\n                                        <label>COG:</label>\r\n                                        <input name='cog' value={bikeInput.cog} onChange={handleChange} />\r\n                                        <label>CHAIN:</label>\r\n                                        <input name='chain' value={bikeInput.chain} onChange={handleChange} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <h3>PHOTO UPLOAD</h3>\r\n                                        <input type='file' multiple onChange={e => setMultiFilesInput([...multiFilesInput, ...e.target.files])} />\r\n                                        <button onClick={e => multipleFileUploadHandler(e)}>UPLOAD IMAGES</button>\r\n                                        <div className='img-preview-container'>\r\n                                            {multiFilesInput.map(e => {\r\n                                                return <img src={URL.createObjectURL(e)} />\r\n                                            })}\r\n                                        </div>\r\n                                    </>\r\n\r\n                                )\r\n\r\n                                }\r\n                                {!uploadView && <h3 id='create-btn' onClick={() => handleBikeSubmit()}>CREATE NEW BIKE</h3>}\r\n                            </form>\r\n                        </>\r\n\r\n                    ) : (\r\n                        <div id=\"login-prompt\">\r\n                            <h4>LOGIN TO UPLOAD BIKES!</h4>\r\n                        </div>\r\n                    )\r\n                    }\r\n                </aside>\r\n            </div>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = stateRedux => {\r\n    return {\r\n        user: stateRedux.userReducer.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BikeGallery);","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\BikePage\\BikePage.js",[],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\Login\\Login.js",[],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\Header\\CommentItem\\CommentItem.js",[],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\Home\\ShowcaseBike\\ShowcaseBike.js",[],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\MarketListItem\\MarketListItem.js",[],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\Home\\MarketGalleryItem\\MarketGalleryItem.js",["91"],"import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport './MarketGalleryItem.css'\r\n\r\nconst MarketGalleryItem = props => {\r\n    const { post } = props\r\n    const [postImg, setPostImg] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const tokenSource = axios.CancelToken.source()\r\n        axios.get(`/api/post/images/${post.classified_id}`, { cancelToken: tokenSource.token })\r\n            .then(res => {\r\n                setPostImg(res.data[0]?.url)\r\n                setLoading(false)\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        return () => {\r\n            tokenSource.cancel()\r\n        }\r\n    }, [post.classified_id])\r\n\r\n\r\n    return (\r\n\r\n        !loading && (\r\n            <Link to={`/market/${post.classified_id}`}>\r\n                <div className='img-gal-container' key={post.classified_id}>\r\n                    <div className='market-info'>\r\n                        <h5>{post.title}</h5>\r\n                        <h5>{post.type}</h5>\r\n                        <h5>$ {parseInt(post.price).toFixed(2)} </h5>\r\n                    </div>\r\n                    <img src={postImg} alt={post.title} />\r\n                </div>\r\n            </Link>\r\n        )\r\n\r\n    )\r\n}\r\n\r\nexport default MarketGalleryItem;","C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\Home\\BikeGalleryItem\\BikeGalleryItem.js",["92"],"C:\\Users\\thedo\\Documents\\WEBDEV\\projects\\demicog\\src\\Components\\BikeListItem\\BikeListItem.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":9,"column":12,"nodeType":"99","messageId":"100","endLine":9,"endColumn":19},{"ruleId":"97","severity":1,"message":"101","line":9,"column":21,"nodeType":"99","messageId":"100","endLine":9,"endColumn":31},{"ruleId":"97","severity":1,"message":"102","line":18,"column":26,"nodeType":"99","messageId":"100","endLine":18,"endColumn":41},{"ruleId":"103","severity":1,"message":"104","line":307,"column":56,"nodeType":"105","endLine":307,"endColumn":92},{"ruleId":"97","severity":1,"message":"106","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":24},{"ruleId":"97","severity":1,"message":"106","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":24},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","'setItemsPerPage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CircularProgress' is defined but never used.","no-global-assign","no-unsafe-negation"]